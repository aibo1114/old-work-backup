// Generated by CoffeeScript 1.12.7
(function() {
  var checkEt, crypto;

  crypto = require('crypto');

  checkEt = function(it) {
    var k, results, v;
    it.password && delete it.password;
    results = [];
    for (k in it) {
      v = it[k];
      if (v instanceof Date) {
        results.push(v.setHours(v.getHours() + 8));
      } else if (_.isObject(v)) {
        results.push(checkEt(v));
      } else {
        if (v === 'false') {
          results.push(it[k] = false);
        } else if (v === 'true') {
          results.push(it[k] = true);
        } else {
          results.push(void 0);
        }
      }
    }
    return results;
  };

  module.exports = {
    sPath: function(code) {
      var path;
      path = "/public/res/upload/" + code;
      if (app.env) {
        return '.' + path;
      } else {
        return _path + path;
      }
    },
    sha256: function(str) {
      return crypto.createHash('sha256').update(str).digest('base64');
    },
    d: function(it, p) {
      var rs;
      rs = it[p];
      delete it[p];
      return rs;
    },
    r: function(it, extra, e) {
      var i, len, t;
      if (_.isArray(it)) {
        for (i = 0, len = it.length; i < len; i++) {
          t = it[i];
          checkEt(t);
        }
        return {
          entities: it,
          count: extra || it.length
        };
      } else if (it) {
        checkEt(it);
        return {
          entity: it,
          msg: extra,
          _e: e
        };
      } else {
        return {
          _e: e,
          msg: 'm_find_no'
        };
      }
    }
  };

}).call(this);

//# sourceMappingURL=util.js.map
