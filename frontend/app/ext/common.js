// Generated by CoffeeScript 1.12.7
(function() {
  module.exports = {
    slice: Array.prototype.slice,
    ro: function(ob) {
      var k, str, v;
      str = '';
      if (_.isArray(ob)) {
        return ob.join(',');
      } else if (_.isObject(ob)) {
        for (k in ob) {
          v = ob[k];
          if (this.hasOwnProperty(k)) {
            str += k + ":" + v + " \n";
          }
        }
        return str;
      } else {
        return ob;
      }
    },
    isChinese: function(text) {
      var txt;
      txt = text.replaceAll('’', "").replaceAll('–', '');
      if (escape(txt).indexOf('%u') < 0) {
        return false;
      } else {
        return true;
      }
    },
    del: function(x, ctx) {
      var e, it;
      if (ctx == null) {
        ctx = window;
      }
      it = ctx[x];
      try {
        delete ctx[x];
      } catch (error) {
        e = error;
        ctx[x] = void 0;
      }
      return it;
    },
    pureText: function(text) {
      return text.replace(/<[^>].*?>/g, "");
    },
    cutText: function(text, length) {
      if (length == null) {
        length = 30;
      }
      if (text.length < length) {
        return text;
      } else {
        return text.substr(0, length - 3) + '...';
      }
    },
    adjustText: function(text, length) {
      var c, i, j, len, res;
      if (length == null) {
        length = 30;
      }
      if (!text) {
        return '';
      }
      text = text.replace(/<[^>].*?>/g, "");
      i = 0;
      j = 0;
      res = '';
      len = text.length;
      while (length > i && len > j) {
        c = text.substr(j++, 1);
        if (/^[\u4e00-\u9fa5]+$/.test(c)) {
          i += 2;
        } else {
          i++;
        }
        res += c;
      }
      if (len > j) {
        res += '...';
      }
      return res;
    },
    fileExt: function(name) {
      var it;
      it = name.split(".");
      return it[it.length - 1];
    },
    parseLocalDate: function(time) {
      if (time.length > 19) {
        time = time.substring(0, 19);
      }
      return new Date((time || "").replace(/-/g, "/").replace(/[TZ]/g, " "));
    },
    prettyDate: function(time, type, d) {
      var date, day_diff, diff;
      if (type == null) {
        type = 'yyyy-MM-dd HH:mm';
      }
      if (!time) {
        return;
      }
      if (time.length > 19) {
        time = time.substring(0, 19);
      }
      date = new Date((time || "").replace(/-/g, "/").replace(/[TZ]/g, " "));
      diff = ((new Date()).getTime() - date.getTime()) / 1000;
      day_diff = (diff > 0 ? Math.floor(diff / 86400) : Math.ceil(diff / 86400));
      if (!d || isNaN(day_diff) || day_diff < -31 || day_diff >= 31) {
        return date.pattern(type);
      }
      if (day_diff <= 0) {
        day_diff *= -1;
        diff *= -1;
        return day_diff === 0 && (diff < 60 && ii("t.j_n") || diff < 120 && ii("t.o_m_l") || diff < 3600 && Math.floor(diff / 60) + ii("t.m_l") || diff < 7200 && ii("t.o_h_l") || diff < 86400 && Math.floor(diff / 3600) + ii("t.h_l")) || day_diff === 1 && ii("t.t") || day_diff < 7 && day_diff + ii("t.d_l") || day_diff < 31 && Math.ceil(day_diff / 7) + ii("t.w_l");
      } else {
        return day_diff === 0 && (diff < 60 && ii("t.j_n") || diff < 120 && ii("t.o_m_a") || diff < 3600 && Math.floor(diff / 60) + ii("t.m_a") || diff < 7200 && ii("t.o_h_a") || diff < 86400 && Math.floor(diff / 3600) + ii("t.h_a")) || day_diff === 1 && ii("t.y") || day_diff < 7 && day_diff + ii("t.d_a") || day_diff < 31 && Math.ceil(day_diff / 7) + ii("t.w_a");
      }
    },
    parseUrl: function(url) {
      var it, l, len1, p, res, str;
      if (url == null) {
        url = location.search;
      }
      res = {};
      if (url.indexOf("?") !== -1) {
        str = url.substr(1).split("&");
        for (l = 0, len1 = str.length; l < len1; l++) {
          it = str[l];
          p = it.split("=");
          res[p[0]] = decodeURIComponent(p[1]);
        }
      }
      return res;
    },
    seqProp: function(obj, pStr, dV) {
      var chain, l, len1, ref, v;
      v = obj;
      ref = pStr.trim().split(".");
      for (l = 0, len1 = ref.length; l < len1; l++) {
        chain = ref[l];
        v = v[chain];
        if (v == null) {
          break;
        }
      }
      if (v != null) {
        return v;
      } else {
        return dV;
      }
    },
    setSeqProp: function(obj, pStr, v) {
      var chain, d, index, k, l, len1, ref;
      ref = pStr.trim().split(".");
      for (l = 0, len1 = ref.length; l < len1; l++) {
        chain = ref[l];
        if (chain.indexOf('[') > -1) {
          k = chain;
          chain = k.split('[')[0];
          index = parseInt(k.split('[')[1].split(']')[0]);
          if (_i === (_len - 1)) {
            d = chain ? obj[chain] : obj;
            if (v) {
              d[index] = v;
            } else {
              return d[index];
            }
          } else {
            obj = chain ? obj[chain][index] : obj[index];
          }
        } else if (_.isObject(obj[chain])) {
          obj = obj[chain];
        } else {
          if (v) {
            obj[chain] = v;
          } else {
            return obj[chain];
          }
        }
      }
    },
    delSeqProp: function(obj, pStr) {
      var chain, index, it, l, len1, lk;
      it = pStr.trim().split(".");
      lk = it.pop();
      if (it.length > 0) {
        for (l = 0, len1 = it.length; l < len1; l++) {
          chain = it[l];
          obj = obj[chain];
        }
      }
      if (lk.indexOf('[') > 0) {
        chain = lk.split('[')[0];
        index = parseInt(lk.split('[')[1].split(']')[0]);
        return obj[chain].splice(index, 1);
      } else {
        return delete obj[lk];
      }
    },
    randomInt: function(low, high) {
      return Math.floor(Math.random() * (high - low + 1) + low);
    },
    randomChar: function(len, x) {
      var l, n, ref, ret;
      if (x == null) {
        x = '0123456789qwertyuioplkjhgfdsazxcvbnm';
      }
      ret = x.charAt(Math.ceil(Math.random() * 10000000) % x.length);
      for (n = l = 1, ref = len; 1 <= ref ? l <= ref : l >= ref; n = 1 <= ref ? ++l : --l) {
        ret += x.charAt(Math.ceil(Math.random() * 10000000) % x.length);
      }
      return ret;
    },
    delProp: function(x, ctx) {
      var e, it;
      if (ctx == null) {
        ctx = window;
      }
      it = ctx[x];
      if (!it) {
        return;
      }
      try {
        delete ctx[x];
      } catch (error) {
        e = error;
        ctx[x] = void 0;
      }
      return it;
    },
    getUrlParams: function(url, params) {
      var k, v;
      return url + '?' + ((function() {
        var results;
        results = [];
        for (k in params) {
          v = params[k];
          results.push(k + "=" + v);
        }
        return results;
      })()).join('&');
    },
    setSubItem: function(data, prop) {
      var it, l, len1, p, results;
      if (prop == null) {
        prop = 'id';
      }
      results = [];
      for (l = 0, len1 = data.length; l < len1; l++) {
        it = data[l];
        if (it.pid) {
          p = data.findBy(prop, it.pid);
          if (p) {
            if (!p.children) {
              p.children = [];
            }
            p.children.push(it);
            data.splice(_i--, 1);
            results.push(_len--);
          } else {
            results.push(void 0);
          }
        } else {
          results.push(void 0);
        }
      }
      return results;
    },
    findByType: function(items, type) {
      var it, l, len1, results;
      results = [];
      for (l = 0, len1 = items.length; l < len1; l++) {
        it = items[l];
        if (it instanceof type) {
          results.push(it);
        }
      }
      return results;
    },
    resPath: function(c, path) {
      return c.resPath + '/upload/' + c.code + '/' + path;
    },
    rPath: function() {
      var it, l, len1, str;
      str = [cf.rPath];
      for (l = 0, len1 = arguments.length; l < len1; l++) {
        it = arguments[l];
        if (_.isString(it)) {
          str.push(it);
        }
      }
      return str.join('/');
    },
    rootsPath: function() {
      var it, l, len1, s;
      s = '';
      for (l = 0, len1 = arguments.length; l < len1; l++) {
        it = arguments[l];
        s += '/' + it;
      }
      return cf.resPrefix + s.substring(1);
    },
    serializeObj: function(form) {
      var it, l, len1, o, ref;
      o = {};
      ref = $(form).serializeArray();
      for (l = 0, len1 = ref.length; l < len1; l++) {
        it = ref[l];
        if (o[it.name]) {
          if (!o[it.name].push) {
            o[it.name] = [o[it.name]];
          }
          o[it.name].push(it.value);
        } else {
          if (it.value.length > 0) {
            o[it.name] = it.value;
          }
        }
      }
      return o;
    },
    tStr: function(o) {
      if (_.isObject(o)) {
        return JSON.stringify(o);
      } else {
        return o;
      }
    },
    pStr: function(it, p) {
      var e;
      if (it && it[p] === null) {
        it[p] = {};
      } else if (it && _.isString(it[p]) && it[p].length > 1) {
        try {
          it[p] = JSON.parse(it[p]);
        } catch (error) {
          e = error;
          log(e);
        }
      }
      return it[p];
    },
    now: function() {
      return new Date().getTime();
    }
  };

}).call(this);

//# sourceMappingURL=common.js.map
