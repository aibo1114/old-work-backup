// Generated by CoffeeScript 1.12.7
(function() {
  var slice = [].slice;

  module.exports = {
    iCat: function(k) {
      return _i['cat_' + k];
    },
    si: function(k) {
      return _i[k];
    },
    ii: function() {
      var i, it, k, len, m, res;
      k = arguments[0], m = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      if (!k) {
        return '';
      }
      if (res = _i[k]) {
        if (res && res.indexOf('{') > -1) {
          for (i = 0, len = m.length; i < len; i++) {
            it = m[i];
            res = res.substring(0, res.indexOf('{')) + it + res.substring(res.indexOf('}') + 1);
          }
          if (_.isString(res)) {
            res = res.replace(new RegExp("{", "gm"), '').replace(new RegExp("}", "gm"), '');
          }
        }
        return res;
      } else {
        if (k.indexOf('::') > -1) {
          k = k.split('::')[1];
        }
        return k.capAll();
      }
    },
    iim: function() {
      var i, it, k, len, m, pm;
      k = arguments[0], m = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      if (m) {
        pm = [];
        for (i = 0, len = m.length; i < len; i++) {
          it = m[i];
          pm.push(util.isChinese(it) ? it : ii(it));
        }
      }
      return ii(k, pm);
    },
    iie: function(k, p) {
      return _i[k + '_' + p] || _i[p] || p.capAll();
    },
    iic: function(p) {
      return _i[p] || p.capAll();
    },
    iin: function(p) {
      if (p) {
        return _i[p] || p.capAll();
      }
    },
    iy: function(p) {
      return ii('m_my', ii(p));
    }
  };

}).call(this);

//# sourceMappingURL=i18n.js.map
