// Generated by CoffeeScript 1.12.7
(function() {
  var slice = [].slice;

  _.extend(String.prototype, {
    trim: function() {
      return this.replace(/^\s+|\s+$/g, "");
    },
    capitalize: function() {
      return this.trim().substring(0, 1).toUpperCase() + this.trim().substring(1);
    },
    capAll: function() {
      var c, it, res;
      res = (function() {
        var l, ref, results;
        results = [];
        for (it = l = 1, ref = this.length; 1 <= ref ? l <= ref : l >= ref; it = 1 <= ref ? ++l : --l) {
          c = this.charAt(it);
          if (('A' <= c && c <= 'Z')) {
            results.push(' ' + c);
          } else {
            results.push(c);
          }
        }
        return results;
      }).call(this);
      return this.charAt(0).toUpperCase() + res.join('');
    },
    startsWith: function(pattern) {
      return this.lastIndexOf(pattern, 0) === 0;
    },
    endsWith: function(pattern) {
      var d;
      d = this.length - pattern.length;
      return d >= 0 && this.indexOf(pattern, d) === d;
    },
    isEmpty: function() {
      return this.length === 0 || this === " " || /^\s*$/.test(this);
    },
    replaceAll: function(s1, s2) {
      return this.replace(new RegExp(s1, "gm"), s2);
    },
    truncate: function(length, truncation) {
      length = length || 30;
      truncation = (Object.isUndefined(truncation) ? "..." : truncation);
      if (this.length > length) {
        return this.slice(0, length - truncation.length) + truncation;
      } else {
        return String(this);
      }
    },
    fileName: function() {
      return this.substr(this.lastIndexOf('/') + 1);
    },
    dStr: function(len) {
      if (len == null) {
        len = 19;
      }
      return this.replace(/-/g, "-").replace(/[TZ]/g, " ").substr(0, len);
    }
  });

  String.randomChar = function(len, x) {
    var l, n, ref, ret;
    if (x == null) {
      x = '0123456789qwertyuioplkjhgfdsazxcvbnm';
    }
    ret = x.charAt(Math.ceil(Math.random() * 10000000) % x.length);
    for (n = l = 1, ref = len; 1 <= ref ? l <= ref : l >= ref; n = 1 <= ref ? ++l : --l) {
      ret += x.charAt(Math.ceil(Math.random() * 10000000) % x.length);
    }
    return ret;
  };

  Date.hour = 1000 * 60 * 60;

  Date.day = 24 * Date.hour;

  Date.week = 7 * Date.day;

  _.extend(Date.prototype, {
    minusTime: function(d, type) {
      if (type == null) {
        type = 'day';
      }
      return Math.round((this.getTime() - d.getTime()) / Date[type]);
    },
    isSameDay: function(d) {
      return this.getFullYear() === d.getFullYear() && this.getMonth === d.getMonth && this.getDate() === d.getDate();
    },
    addDays: function(d) {
      var t;
      if (d) {
        t = this.getTime();
        t = t + (d * 86400000);
        this.setTime(t);
      }
      return this;
    },
    nextWeekDay: function(day) {
      return this.addDays((day + 7 - this.getDay()) % 7);
    },
    firstDayOfMonth: function() {
      return new Date(this.getFullYear(), this.getMonth(), 1);
    },
    lastDayOfMonth: function() {
      return new Date(this.getFullYear(), this.getMonth() + 1, 1).addDays(-1);
    },
    monday: function() {
      this.setHours(0, 0, 0, 0);
      if (this.getDay() > 0) {
        return this.addDays(1 - this.getDay());
      } else {
        return this.addDays(1 - 7);
      }
    },
    sunday: function() {
      if (this.getDay() > 0) {
        return this.addDays(7 - this.getDay());
      } else {
        return this;
      }
    },
    nextMonth: function() {
      return new Date(this.getFullYear(), this.getMonth() + 1, 1);
    },
    lastMonth: function() {
      return new Date(this.getFullYear(), this.getMonth() - 1, 1);
    },
    pattern: function(fmt) {
      var k, o, week;
      if (fmt == null) {
        fmt = 'yyyy-MM-dd HH:mm:ss';
      }
      o = {
        'Y+': this.getFullYear(),
        'M+': this.getMonth() + 1,
        'd+': this.getDate(),
        'h+': this.getHours() % 12 === 0 ? 12 : this.getHours() % 12,
        'H+': this.getHours(),
        'm+': this.getMinutes(),
        's+': this.getSeconds(),
        'q+': Math.floor((this.getMonth() + 3) / 3),
        'S': this.getMilliseconds()
      };
      week = {
        '0': '日',
        '1': '一',
        '2': '二',
        '3': '三',
        '4': '四',
        '5': '五',
        '6': '六'
      };
      if (/(y+)/.test(fmt)) {
        fmt = fmt.replace(RegExp.$1, (this.getFullYear() + '').substr(4 - RegExp.$1.length));
      }
      if (/(E+)/.test(fmt)) {
        fmt = fmt.replace(RegExp.$1, (RegExp.$1.length > 1 ? (RegExp.$1.length > 2 ? '星期' : '周') : '') + week[this.getDay() + '']);
      }
      for (k in o) {
        if (new RegExp('(' + k + ')').test(fmt)) {
          fmt = fmt.replace(RegExp.$1, RegExp.$1.length === 1 ? o[k] : ('00' + o[k]).substr(('' + o[k]).length));
        }
      }
      return fmt;
    }
  });

  Date.parseLocal = function(time) {
    if (time.length > 19) {
      time = time.substring(0, 19);
    }
    return new Date((time || "").replace(/-/g, "/").replace(/[TZ]/g, " "));
  };

  _.extend(Number.prototype, {
    toOrdinal: function() {
      var n, ord, suffix;
      n = this % 100;
      suffix = ["th", "st", "nd", "rd", "th"];
      ord = (n < 21 ? (n < 4 ? suffix[n] : suffix[0]) : (n % 10 > 4 ? suffix[0] : suffix[n % 10]));
      return this + ord;
    },
    formatMoney: function(cc, c, d, t) {
      var i, j, n, s;
      if (c == null) {
        c = 2;
      }
      if (d == null) {
        d = '.';
      }
      if (t == null) {
        t = ',';
      }
      cc = cf._curCode || '$';
      n = this;
      s = (n < 0 ? " -" : "");
      i = parseInt(n = Math.abs(+n || 0).toFixed(c)) + "";
      j = ((j = i.length) > 3 ? j % 3 : 0);
      return cc + s + (j ? i.substr(0, j) + t : "") + i.substr(j).replace(/(\d{3})(?=\d)/g, "$1" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : "");
    }
  });

  _.extend(Array.prototype, {
    clear: function() {
      this.length = 0;
      return this;
    },
    last: function(num) {
      if (num == null) {
        num = 1;
      }
      return this[this.length - num];
    },
    has: function(val) {
      var i;
      i = this.length;
      while (i--) {
        if (val === this[i]) {
          return true;
        }
      }
      return false;
    },
    includeBy: function(prop, val) {
      var i;
      i = this.length;
      while (i--) {
        if (val === this[i][prop]) {
          return true;
        }
      }
      return false;
    },
    detect: function(val, nv) {
      var i;
      i = 0;
      while (i < this.length) {
        if (this[i] === val) {
          if (nv) {
            this[i] = nv;
          }
          return this[i];
        }
        i++;
      }
      return null;
    },
    remove: function(val, fz) {
      var i;
      i = 0;
      while (i < this.length) {
        if (this[i] === val || (fz && this[i].indexOf(val) > -1)) {
          this.splice(i, 1);
          return val;
        }
        i++;
      }
      return null;
    },
    delBy: function(val, prop, one) {
      var i, len, v;
      if (prop == null) {
        prop = 'id';
      }
      i = 0;
      v = [];
      while (i < this.length) {
        if ((prop.indexOf('.') > 0 ? util.seqProp(this[i], prop) : this[i][prop]) === val) {
          v.push(this[i]);
          this.splice(i, 1);
          if (one) {
            return v[0];
          }
        }
        i++;
      }
      if (len = v.length) {
        if (len === 1) {
          return v[0];
        } else {
          return v;
        }
      } else {
        return null;
      }
    },
    find: function(id) {
      var i;
      i = 0;
      while (i < this.length) {
        if (this[i].id && this[i].id.toString() === id) {
          return this[i];
        }
        i++;
      }
      return null;
    },
    findBy: function(prop, val) {
      var i;
      i = 0;
      while (i < this.length) {
        if ((prop.indexOf('.') > 0 ? util.seqProp(this[i], prop) : this[i][prop]) === val) {
          return this[i];
        }
        i++;
      }
      return null;
    },
    findAllBy: function(prop, val) {
      var i, res;
      res = [];
      i = 0;
      while (i < this.length) {
        if ((prop.indexOf('.') > 0 ? util.seqProp(this[i], prop) : this[i][prop]) === val) {
          res.push(this[i]);
        }
        i++;
      }
      return res;
    },
    replaceById: function(item) {
      var i;
      i = 0;
      while (i < this.length) {
        if (this[i].id === item.id) {
          this[i] = item;
        }
        i++;
      }
    },
    addUniq: function(val) {
      if (!this.has(val)) {
        this.push(val);
      }
    },
    sortBy: function(attr, isAsc) {
      this.sort(function(a, b) {
        if (isAsc) {
          if (a[attr] < b[attr]) {
            return -1;
          } else {
            return 1;
          }
        } else {
          if (a[attr] > b[attr]) {
            return -1;
          } else {
            return 1;
          }
        }
      });
      return this;
    },
    pk: function() {
      var it, l, len1, prop, ref, results;
      prop = 1 <= arguments.length ? slice.call(arguments, 0) : [];
      ref = this;
      results = [];
      for (l = 0, len1 = ref.length; l < len1; l++) {
        it = ref[l];
        results.push(_.pk.apply(this, [it].concat(prop)));
      }
      return results;
    },
    pushById: function(obj, k) {
      if (k == null) {
        k = 'id';
      }
      if (this.findBy(k, obj[k])) {

      } else {
        return this.push(obj);
      }
    },
    addOrUpdate: function(item, key) {
      var find, it, l, len1, ref;
      if (key == null) {
        key = 'id';
      }
      find = false;
      ref = this;
      for (l = 0, len1 = ref.length; l < len1; l++) {
        it = ref[l];
        if (it[key] === item[key]) {
          this[_i] = item;
          find = true;
          break;
        }
      }
      if (!find) {
        return this.push(item);
      }
    },
    concatBy: function(next, key, func) {
      var d, it, l, len1;
      if (func == null) {
        func = _.extend;
      }
      for (l = 0, len1 = next.length; l < len1; l++) {
        it = next[l];
        if (key) {
          d = this.findBy(key, it[key]);
          if (d) {
            func(d, it);
          } else {
            this.push(it);
          }
        } else {
          this.push(it);
        }
      }
      return this;
    },
    recSet: function(sub, fun) {
      var it, l, len1, ref, results;
      if (sub == null) {
        sub = 'children';
      }
      ref = this;
      results = [];
      for (l = 0, len1 = ref.length; l < len1; l++) {
        it = ref[l];
        fun(it);
        if (_.isArray(it[sub])) {
          results.push(it[sub].recSet(sub, fun));
        } else {
          results.push(void 0);
        }
      }
      return results;
    },
    recFind: function(sub, val, prop) {
      var it, l, len1, r, ref;
      if (prop == null) {
        prop = 'id';
      }
      ref = this;
      for (l = 0, len1 = ref.length; l < len1; l++) {
        it = ref[l];
        if (it[prop] === val) {
          return it;
        }
        if (_.isArray(it[sub])) {
          r = it[sub].recFind(sub, val, prop);
          if (r) {
            return r;
          }
        }
      }
      return null;
    }
  });

  _.extend(_, {
    pk: function() {
      var it, l, len1, ob, prop, res;
      ob = arguments[0], prop = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      if (prop.length === 1) {
        return util.seqProp(ob, prop[0]);
      } else if (prop.length > 1) {
        res = {};
        for (l = 0, len1 = prop.length; l < len1; l++) {
          it = prop[l];
          res[it.replaceAll('\\.', '_')] = util.seqProp(ob, it);
        }
        return res;
      } else {
        return {};
      }
    }
  });

}).call(this);

//# sourceMappingURL=string.js.map
