// Generated by CoffeeScript 1.12.7
(function() {
  cf.community = {
    name: '试玩',
    resPath: '/'
  };

  require('../../../lib/meta/_status');

  require('../../../lib/terminal/h5_mgm');

  require("./meta/meta");

  cf.view.form.prototype.btns = ['back', 'save'];

  cf.view.table.prototype.noLastTime = true;

  window.user = new u({}, {
    logoutUrl: util.actUrl('logout'),
    check: function() {
      return true;
    },
    afterLogin: function() {
      return new cf.view.consoleMenu();
    },
    logout: function() {
      if (this.isLogin()) {
        $.get(this.logoutUrl || util.actUrl(cf.auth || "auth", "logout"));
        this.trigger('logout');
      }
      if (typeof this.afterLogout === "function") {
        this.afterLogout();
      }
      return this.removeData();
    },
    isLogin: function() {
      return true;
    }
  });

  new router({
    checkSvrAuth: util.restUrl('check'),
    checkAuth: false,
    dfPath: 'data',
    logoutPath: 'login',
    loadMod: function() {
      require('../../console/app/mods/data');
      return cf.exLabel();
    },
    checkPage: function(name) {
      return true;
    },
    routes: {
      '': 'index',
      '!/login': 'login',
      '!/*path': 'dAct'
    },
    login: function() {
      return lg.loginForm(this.ctn, {
        className: 'break',
        urlRoot: util.restUrl('login'),
        prop: [
          _ep('user:username', {
            code: 'account'
          }), _ep('user:password', {
            cvt: function(v) {
              return md5(v);
            }
          })
        ],
        saveSuccess: function(model, resp) {
          if (resp.ret === 1) {
            return user.login(resp.user);
          }
        },
        setBtns: function() {
          return [
            {
              label: '登录',
              cls: 'btn btn-primary btn-block btn-lg save'
            }
          ];
        }
      });
    }
  });

}).call(this);

//# sourceMappingURL=_main.js.map
