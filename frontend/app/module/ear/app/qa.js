// Generated by CoffeeScript 1.12.7
(function() {
  require('../../../lib/func/showInTd');

  m.answer = {
    prop: [],
    btn: {
      isShow: function(it) {
        var icon;
        log(it.isShow);
        icon = it.isShow ? "eye-open" : "eye-close";
        return util.iBtn(icon);
      }
    },
    event: {
      isShow: {
        type: 'click',
        fun: function(e) {
          var m;
          m = this.findData(e);
          m.set('isShow', !m.get('isShow'));
          return m.saveAttr('isShow');
        }
      }
    },
    addFormOpt: {
      data: function() {
        var d, qr;
        qr = this.qs.user ? this.qs.user : _.pick(this.qs, 'username', 'phone');
        d = {
          questioner: qr,
          issue: _.pick(this.qs, '_id', 'content', 'dateCreated')
        };
        if (user.shopId) {
          d.shopId = user.shopId;
        }
        return d;
      }
    },
    listOpt: {
      _attrs: function() {
        return 'username,content,dateCreated,questioner,phone,isShow';
      },
      itemBtns: ['isShow', 'del'],
      criteriaOpt: function() {
        return {
          q: {
            'user._id': user.id
          }
        };
      },
      itemContext: function(d) {
        return $.extend(d, {
          btn: true,
          title: d.questioner.username + " 【" + (d.dateCreated.dStr()) + "】",
          brief: d.content
        });
      }
    }
  };

  m.inquiry = {
    btn: {
      showInTd: function() {
        return util.iBtn("comment");
      }
    },
    listOpt: {
      _attrs: function() {
        return 'username,content,dateCreated';
      },
      itemBtns: ['showInTd'],
      afterShow: function(e, p) {
        var d, q, t;
        t = util.ct(e);
        d = this.findData(e);
        q = {
          q: {
            'issue._id': d.id,
            'user._id': user.id
          }
        };
        return app.dm.addOrEdit(p, 'answer', q, {
          qs: d.toJSON(),
          btns: ['save'],
          prop: [
            m._textarea('content', {
              noLabel: true,
              valid: {
                maxlength: 300
              }
            })
          ],
          before: function(d) {
            d.isNew = true;
            return d;
          },
          _saveSuccess: function(m) {
            return t.trigger('click');
          }
        });
      },
      criteriaOpt: function() {
        var oq;
        oq = [
          {
            uid: user.id
          }, {
            uid: {
              $exists: false
            }
          }
        ];
        if (user.hasRole('manager')) {
          oq.push({
            'shop._id': user.sid
          });
        }
        return {
          q: {
            $or: oq,
            status: {
              $ne: 1
            }
          }
        };
      },
      itemContext: function(d) {
        return $.extend(d, {
          btn: true,
          tag: 'a',
          title: d.username + " 【" + (d.dateCreated.dStr()) + "】",
          brief: d.content
        });
      }
    }
  };

  app.enhance({
    routes: {
      '!/qa(/:type)': 'qa'
    },
    qa: function(type) {
      if (type == null) {
        type = 'inquiry';
      }
      util.tabPage(ctn, [
        {
          href: tu.navUrl('qa', 'inquiry'),
          title: '最新咨询',
          tabClass: 'inquiry'
        }, {
          href: tu.navUrl('qa', 'answer'),
          title: '已回答的问题',
          tabClass: 'answer'
        }
      ], type);
      return this.dm.collection($(ctn).find('.tab-content'), type, {
        head: false
      });
    }
  });

}).call(this);

//# sourceMappingURL=qa.js.map
