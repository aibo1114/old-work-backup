// Generated by CoffeeScript 1.12.7
(function() {
  var agentOp, event, func, handleOp, text, wechat;

  wechat = require('wechat');

  func = {
    doMatch: function(k, rsp) {
      var filter;
      filter = k.indexOf('@' > -1) ? {
        email: k
      } : +k ? {
        phone: k
      } : {
        um: true
      };
      if (!filter.um) {
        return dao.get(code, 'user', filter, function(res) {
          log(res);
          if (res) {
            return rsp.reply('绑定成功');
          } else {
            return rsp.reply('用户为找到');
          }
        });
      } else {
        return rsp.reply('录入有误');
      }
    }
  };

  agentOp = function(code, rsp) {
    return dao.get('elp', 'agentOp', {
      code: code
    }, function(res) {
      if (res) {
        return handleOp(res, rsp);
      }
    });
  };

  handleOp = function(item, rsp) {
    var key, ref, str;
    switch (item.type) {
      case 'text':
        str = item.content;
        return rsp.reply(str);
      case 'page':
        str = item.content;
        if (!item.imgUrl) {
          item.imgUrl = _resPath + 'images/wechat_reply.png';
        }
        log(item.imgUrl);
        return rsp.reply([
          {
            title: item.title,
            description: item.brief,
            picurl: item.imgUrl,
            url: str
          }
        ]);
      case 'func':
        ref = item.Content.split(' '), key = ref[0], str = ref[1];
        if (func && func[key]) {
          return func[key](str, rsp);
        }
        break;
      case 'script':
        return log(item.content);
      default:
        return log('no match');
    }
  };

  text = function(msg, req, rsp) {
    return agentOp(msg.Content, rsp);
  };

  event = function(msg, req, rsp) {
    var evtKey, filter;
    evtKey = msg.EventKey;
    log(evtKey);
    if (msg.Event === 'subscribe') {
      if (evtKey) {
        dao.save('elp', 'subscriber:uid,woid', {
          uid: evtKey.split('_')[1],
          woid: msg.FromUserName,
          status: 1
        });
      }
      return agentOp(msg.Event, rsp);
    } else if (msg.Event === 'unsubscribe') {
      filter = {
        woid: msg.FromUserName
      };
      return dao.findAndUpdate('ear', 'subscriber', filter, {
        status: 0
      }, function(res) {});
    } else if (msg.Event === 'CLICK') {
      return agentOp(evtKey, rsp);
    }
  };

  module.exports = function(code) {
    if (_wtcCtn[code]) {
      return wechat(_wtcCtn[code]).text(text).event(event);
    } else {
      dao.get(code, 'pubAccount', {}, function(item) {
        return _wtcCtn[code] = {
          token: code + "z2013h",
          appid: item.appId,
          encodingAESKey: item.aesKey || 'E5wLRN02sXMyrhHzjyRMRcqP6muoRB5erAEvkhnueAs'
        };
      });
      return null;
    }
  };

}).call(this);

//# sourceMappingURL=wt.js.map
