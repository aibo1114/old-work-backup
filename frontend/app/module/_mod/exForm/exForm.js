// Generated by CoffeeScript 1.12.7
(function() {
  var doExForm;

  doExForm = function(ob, code, act, p) {
    var ctn, opt;
    if (ob.isLogin && !user.isLogin()) {
      cf._toLogin = location.hash;
      cf.r('login');
      return;
    }
    if (!$(ctn).length) {
      ctn = app.ctn;
    }
    ob = _.clone(ob);
    switch (act) {
      case 'list':
        if (true || user.hasRole('admin')) {
          opt = {
            criteriaOpt: function() {
              return {
                q: {
                  'user._id': user.id
                }
              };
            },
            btns: [
              {
                label: '新建',
                cls: _st.btn('primary', 'sm'),
                href: util.navUrl('exForm', code)
              }
            ],
            itemContext: function(d) {
              return {
                title: d.title,
                attrs: {
                  href: util.navUrl('exForm', code, 'view', d._id)
                }
              };
            }
          };
          return app.dm.collection(ctn, ob.entity, opt);
        }
        break;
      case 'tb':
        if (true || user.hasRole('admin')) {
          return app.dm.tb(ctn, ob.entity, {
            cols: ob.prop,
            itemBtns: ['popView'],
            btns: []
          });
        }
        break;
      case 'view':
        if (true || user.hasRole('admin')) {
          return app.dm.view(ctn, ob.entity, p, {
            tagClass: _st.tb(0, 1, 1, 0, 'viewTable'),
            editable: true,
            prop: ob.prop
          });
        }
        break;
      default:
        $.extend(ob, {
          callback: function() {
            if (ob.refFile && ob.refFile.head) {
              return ctn.prepend(tu.imgItem(ob, cf.community));
            }
          },
          before: function(d) {
            var it;
            if (this.arrayMod) {
              d[this.arrayMod] = (function() {
                var i, len, ref, results;
                ref = this.prop;
                results = [];
                for (i = 0, len = ref.length; i < len; i++) {
                  it = ref[i];
                  results.push({
                    title: it.label,
                    val: util.del(it.code, d),
                    code: it.code
                  });
                }
                return results;
              }).call(this);
            }
            return d;
          }
        });
        cf._rsMsg = ob.rsMsg;
        return app.dm.form(ctn, ob.entity, ob);
    }
  };

  app.enhance({
    routes: {
      '!/exForm/:code(/:act)(/:p)': 'form'
    },
    form: function(code, act, p) {
      if (W._exForm && _exForm.code === code) {
        return doExForm(_exForm, code, act, p);
      } else {
        return $.get(util.restUrl('exForm', 'code', code), function(res) {
          var ob;
          if (res && (ob = res.entity)) {
            return doExForm(ob, code, act, p);
          } else {
            return popMsg('没有功能', 'warning');
          }
        });
      }
    }
  });

}).call(this);

//# sourceMappingURL=exForm.js.map
