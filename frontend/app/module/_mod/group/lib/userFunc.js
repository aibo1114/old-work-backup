// Generated by CoffeeScript 1.12.7
(function() {
  var sBtn;

  require('../../../../lib/func/wtShare');

  sBtn = require('../../../../lib/widget/addSetBtn');

  require('./moodTag');

  cf.userFunc = function(ctn, mo) {
    var i, it, k, len, mTags, name, ref, t, v;
    cf.dm.l(sBtn, ctn, {
      ent: mo,
      prop: 'like',
      item: user.id,
      color: 'danger',
      icon: 'thumbs-up',
      text: function() {
        return "<div>" + (this.added ? '已' : '') + "喜欢(" + this.items.length + ")</div>";
      }
    });
    cf.dm.l(sBtn, ctn, {
      ent: mo,
      prop: 'pick',
      item: user.id,
      color: 'info m-l-3',
      icon: 'heart-empty',
      text: function() {
        return "<div>" + (this.added ? '已' : '') + "收藏(" + this.items.length + ")</div>";
      },
      _clickBtn: function() {
        if (user.isLogin()) {
          if (this.added) {
            return $.delJSON(util.restUrl('match', this.ent._e, 'del'), {
              ent: 'pickedItem',
              q: {
                'ref._id': this.ent._id,
                'user._id': user.id
              }
            });
          } else {
            return cf.dm.ent({
              user: user.pick(),
              group: this.ent.group,
              title: this.ent[(this.ent.cat === 'task' ? 'content' : 'title')],
              ref: _.pick(this.ent, '_id', '_e', 'user')
            }, {
              entity: 'pickedItem'
            }).save();
          }
        } else {
          return $('.wtShare').trigger('click');
        }
      }
    });
    cf.dm.l(sBtn, ctn, {
      ent: mo,
      prop: 'share',
      item: user.id,
      color: 'warning m-l-3 wtShare',
      icon: 'share',
      text: function() {
        return "<div>" + (this.added ? '已' : '') + "分享(" + this.items.length + ")</div>";
      },
      _clickBtn: function() {}
    });
    util.viewCount(mo);
    mTags = {};
    if (mo.moodTags && mo.moodTags.length) {
      this.$('.moodTagsBox').show();
      ref = mo.moodTags;
      for (k in ref) {
        v = ref[k];
        if (_.isArray(v)) {
          for (i = 0, len = v.length; i < len; i++) {
            it = v[i];
            if (mTags[name = it.title] == null) {
              mTags[name] = 0;
            }
            mTags[it.title]++;
          }
        }
      }
      t = $('.moodTags');
      for (k in mTags) {
        v = mTags[k];
        t.append(tu.btn(k + "x<strong>" + v + "</strong>", 'btn btn-sm btn-success m-r-1 m-b-1'));
      }
      if (!W._ent) {
        W._ent = {};
        $.get(util.restUrl('moodTag'), {
          max: 100
        }, function(res) {
          return W._ent.moodTag = res.entities;
        });
      }
      return $('.jBtns').mk('a', {
        "class": 'btn btn-sm btn-danger'
      }, (tu.icon('plus')) + " 添加标签", null, null, function() {
        var ref1, val;
        if (!user.isLogin()) {
          cf.r('login');
          return;
        }
        val = (ref1 = mo.moodTags) != null ? ref1[user.id] : void 0;
        return cf.dm.l('moodTag', 'air', {
          data: W._ent.moodTag,
          val: val || [],
          entUrl: util.actUrl("set/thread/_id/" + (_ent._id || mo._id) + "/moodTags")
        });
      });
    }
  };

}).call(this);

//# sourceMappingURL=userFunc.js.map
