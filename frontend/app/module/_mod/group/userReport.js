// Generated by CoffeeScript 1.12.7
(function() {
  module.exports = _exv('userReport', '_tag', {
    _one: true,
    tmpl: 'userReport',
    className: 'text-xs-center col-xs-12',
    events: {
      'click .next': function() {
        this.setState(this.context.idx + 1, this.context);
        this.ctn.empty();
        return this.render();
      },
      'click .prev': function() {
        this.setState(this.context.idx - 1, this.context);
        this.ctn.empty();
        return this.render();
      },
      'click .lenBar': function(e) {
        var t;
        t = util.ct(e);
        if (t.children().length) {
          return log('gg');
        } else {
          return log('lenbar');
        }
      },
      'click .readNote': function(e) {
        var sd, wk, wke;
        wk = util.ct(e).attr('week');
        sd = new Date(app.myGroup.get('startedDate')).monday().addDays(7 * wk);
        wke = new Date(sd).addDays(7);
        return cf.dm.l('collection', 'slide', {
          entity: 'thread',
          title: "第" + wk + "周 读书笔记",
          mode: 'card',
          foot: false,
          criteriaOpt: function() {
            return {
              q: {
                'group._id': app.myGroup.id,
                'user._id': user.id,
                dateCreated: {
                  $gt__d: sd.pattern(),
                  $lt__d: wke.pattern()
                }
              }
            };
          },
          addAll: function() {
            var it, tasks, weekDate;
            this.ctn.removeClass('loadingData');
            this.ctn = this.$('.card-block');
            this.data = this.collection.toJSON();
            weekDate = (sd.pattern('yyyy-MM-dd')) + " - " + (wke.pattern('yyyy-MM-dd'));
            tasks = (function() {
              var i, len, ref, results;
              ref = app.myGroup.get('task');
              results = [];
              for (i = 0, len = ref.length; i < len; i++) {
                it = ref[i];
                results.push({
                  title: it.title,
                  perWeek: it.perWeek,
                  items: this.data.findAllBy('form.code', it.subData.code)
                });
              }
              return results;
            }).call(this);
            util.loadPic(this.ctn);
            return cf.dm.l(sBtn, this.$('.dBtns'), {
              prop: 'share',
              item: user.id,
              color: 'warning m-l-3',
              icon: 'share',
              text: function() {
                return "<div>分享</div>";
              },
              _clickBtn: function() {
                return popMsg('分享您的阅读感悟给朋友们吧, 有精美的格式哦:)');
              }
            });
          }
        });
      }
    },
    init: function() {
      this.group = app.myGroup;
      this.stat = this.data.stat || [];
      this.curWeek = Math.max(cf.curWeek - 1, 0);
      return this.maxLen = this.stat.length - 1;
    },
    setState: function(idx, ctx) {
      var cStat, dMap, dates, dd, dk, i, it, j, len, m, ref;
      cStat = this.stat[idx] || {};
      dMap = {};
      if (cStat.thread) {
        ref = cStat.thread;
        for (i = 0, len = ref.length; i < len; i++) {
          it = ref[i];
          m = Math.max(+it.dateCreated.substr(11, 2), 4);
          it.top = (m * 60 + +it.dateCreated.substr(14, 2) - 4 * 60) * 12 / (24 * 60);
          dk = it.dateCreated.substr(0, 10);
          if (dMap[dk] == null) {
            dMap[dk] = [];
          }
          dMap[dk].push(it);
        }
      }
      dates = [];
      dd = new Date(cStat.date);
      for (it = j = 1; j <= 7; it = ++j) {
        dates.push({
          weekDay: "周" + (dd.getDay() || '日'),
          date: (dd.getMonth() + 1) + '/' + dd.getDate(),
          thread: dMap[dd.pattern('yyyy-MM-dd')]
        });
        dd.addDays(1);
      }
      return $.extend(ctx, {
        cStat: cStat,
        idx: idx,
        dates: dates
      });
    },
    context: function() {
      return this.setState(this.curWeek, {
        maxLen: this.maxLen,
        curWeek: this.curWeek,
        timeLen: ['08:00', '12:00', '16:00', '20:00', '24:00']
      });
    },
    setContent: function() {
      if (this.context.maxLen === -1) {
        return this.ctn.html(tu.btn('开始统计'));
      }
    }
  });

}).call(this);

//# sourceMappingURL=userReport.js.map
