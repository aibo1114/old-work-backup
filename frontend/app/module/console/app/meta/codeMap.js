// Generated by CoffeeScript 1.12.7
(function() {
  meta.codeMap = {
    prop: [
      _ep('code'), {
        code: 'type',
        id: 'tpSelect',
        type: 'select',
        attrs: {
          data: {
            text: '文本',
            obj: '自定义',
            alipay: '支付宝',
            luosimao: '螺丝帽',
            douban: '豆瓣',
            wechat: '微信',
            wtStyle: '微信格式'
          }
        },
        trigger: 'change',
        events: {
          change: function(e) {
            var addable, deleteable, fixed, ip, ise, mv, obj, t, v;
            v = util.ct(e).val();
            mv = this.model.get('value');
            addable = false;
            deleteable = false;
            fixed = true;
            ise = this.$('select');
            ip = this.$('input[name="code"]');
            if (mv) {
              obj = mv;
            } else {
              obj = ((function() {
                switch (v) {
                  case 'obj':
                    addable = true;
                    deleteable = true;
                    ({
                      fixed: false
                    });
                    return {};
                  case 'alipay':
                    return {
                      web_gate: 'https://mapi.alipay.com/gateway.do',
                      mob_gate: 'http://wappaygw.alipay.com/service/rest.htm',
                      sign: 'MD5',
                      charset: 'utf-8',
                      seller: '',
                      partner: '',
                      key: ''
                    };
                  case 'luosimao':
                    return {
                      api: 'https://sms-api.luosimao.com/v1/send.json',
                      key: ''
                    };
                  case 'douban':
                    return {
                      api: '',
                      key: ''
                    };
                  case 'weibo':
                    return {
                      api: '',
                      key: ''
                    };
                  case 'wtStyle':
                    return {
                      h3: 'border-left: 4px solid orangered; padding-left: 10px; color: orangered;font-size: 20px;line-height: 22px;margin:20px 0 10px;',
                      h4: 'border-bottom: 1px dashed #df382c; margin: 10px 0;font-weight: bold;font-size: 18px;',
                      ul: 'list-style-type: disc;padding-left: 1.2em;',
                      "div class='well'": 'min-height: 20px; padding: 10px 15px; margin-bottom: 20px; background-color: #f5f5f5; border: 1px solid #e3e3e3; border-radius: 4px;',
                      dd: 'margin: 3px 0 15px 0;color: orangered;',
                      blockquote: 'font-size: 16px; color: #777; text-align: left; margin: 10px 0;'
                    };
                  default:
                    return '';
                }
              })());
            }
            t = util.findAndGen(this.ctn, '#pea');
            if (!t.children().length) {
              t.append(this.genFormItem({
                label: '值',
                type: 'textarea'
              }, 'value', mv));
            }
            if (_.isObject(obj)) {
              ise.attr('disabled', true);
              ip.attr('disabled', true);
              new cf.view.propEditor({
                parent: t.find('.col-md-10'),
                cleanAll: true,
                tagName: 'div',
                name: 'value',
                addable: addable,
                deleteable: deleteable,
                fixed: fixed,
                form: this,
                val: obj,
                addOpt: null
              });
            }
            return ip.val(v);
          }
        }
      }
    ],
    listOpt: {
      checkAll: true,
      btns: ['topAdd', 'copyAdd', 'trans', 'batchDel']
    },
    formOpt: {
      toFetch: false,
      btns: ['save'],
      callback: function() {
        return this.$('select[name="type"]').trigger('change');
      }
    }
  };

}).call(this);

//# sourceMappingURL=codeMap.js.map
