// Generated by CoffeeScript 1.12.7
(function() {
  var io, router, socketUser;

  require('./style/mob.css');

  require('../../../lib/mob');

  cf.loadTmpl = function(name) {
    return require("./tmpl/" + name + ".jade");
  };

  cf.loadLibTmpl = function(name) {
    return require("../../../lib/tmpl/" + name + ".jade");
  };

  router = require("../../../lib/userRouter");

  cf.view.form.prototype.style = 'panel-primary';

  require('./meta/common');

  require('../../../lib/widget/slide/app');

  io = require('socket.io');

  W.st = io();

  cf.onMap = {};

  window.se = function(path, opt) {
    log('emit: ' + path);
    log(opt);
    log('end...');
    return st.emit(path, JSON.stringify(opt));
  };

  window.so = function(path, cb) {
    if (cf.onMap[path]) {
      return;
    }
    cf.onMap[path] = true;
    return st.on(path, function(d) {
      var r;
      log('listen: ' + path);
      r = JSON.parse(d);
      if (r.ret === '1') {
        log(r);
        log('end...');
        return cb(r.data);
      } else if (r.ret === '50018') {
        return popMsg('游戏进行中,不能进入', 'warning');
      } else {
        log(path + ': 返回参数错误');
        log(r);
        log('end...');
        return popMsg('返回参数错误', 'danger');
      }
    });
  };

  W.ctn = $('#content');

  so('AccountInfo', function(d) {
    user.data = d;
    user.id = d.uid;
    return se('RoomMyRoom');
  });

  so('RoomLeavel', function(d) {
    if (d) {
      return se('RoomGetInfo', {
        rid: d.rid
      });
    }
  });

  so('RoomMyRoom', function(d) {
    if (d.entities) {
      user.room = d.entities[0];
    }
    app.start();
    return user.afterLogin();
  });

  socketUser = cf.model.entity.extend({
    entity: 'user',
    entityAuth: function() {
      return true;
    },
    auth: function() {
      return se('AccountInfo');
    },
    onlineCheck: function() {
      return this.auth();
    },
    check: function() {
      return true;
    },
    afterLogin: function() {
      var tmpl;
      tmpl = cf.rtp('menuItem', {
        menus: [
          {
            label: '首页',
            code: 'home',
            icon: tu.iconxx('home'),
            url: util.navUrl('index')
          }, {
            label: '房间',
            code: 'room',
            icon: tu.iconxx('room'),
            url: util.navUrl('room')
          }
        ]
      });
      app.btmMenu = $(tmpl);
      app.btmMenu.on('click', 'a', function(e) {
        return util.setActive(e);
      });
      $('body').append(app.btmMenu);
      return $('#content').css({
        'padding-bottom': '90px'
      });
    }
  });

  window.user = new socketUser();

  cf.playerList = function(id) {
    return se('RoomGetPlayerList', {
      rid: id,
      offset: '0',
      max: '10'
    });
  };

  cf.leaveRoom = function() {
    if (user.roomInfo) {
      se('RoomLeavel', {
        rid: user.roomInfo.rid,
        uid: user.id
      });
      user.roomInfo = null;
      return app.room.clear({
        silent: true
      });
    }
  };

  cf.addMyRoom = function(ctn) {
    var btn, url;
    url = util.navUrl('room', user.room.rid);
    btn = $("<a href='" + url + "' class='enterRoom'><i class='icon-enterRoom'></i></a>");
    return ctn.append(btn);
  };

  cf.addRoomBtn = function(ctn, icon) {
    var btn;
    if (icon == null) {
      icon = 'plus';
    }
    btn = $(tu.icon(icon, 'a', '', 'btn pull-right openAir'));
    btn.click(function() {
      var data, title;
      data = {};
      title = user.room ? (data = {
        name: user.room.rname,
        mperson: user.room.mperson,
        rintro: user.room.rintro
      }, '编辑房间信息') : '新建房间';
      app.dm.form('air', 'room', {
        toFetch: false,
        title: title,
        head: true,
        closeBtn: true,
        tagClass: 'modal-body',
        data: data,
        prop: [
          m._text('name', {
            label: '房间名称'
          }), m._text('mperson', {
            label: '房间人数',
            val: 6
          }), {
            code: 'gid',
            xtype: 'collection',
            label: '请选择游戏',
            noCol: true,
            attrs: {
              toFetch: false,
              mode: null,
              collection: app.hotGames,
              events: {
                'click .pick': function(e) {
                  return this.form.model.set('gid', this.findData(e).get('gid'));
                }
              },
              modelOpt: {
                tagName: 'a',
                className: 'pick col-xs-3 text-center',
                tmpl: 'gameItem'
              }
            }
          }, m._textarea('rintro', {
            noLabel: true,
            val: '房间介绍~',
            ph: '房间介绍'
          })
        ],
        btns: [
          {
            label: '立即创建',
            cls: 'btn btn-primary save'
          }
        ],
        _save: function(e) {
          var action, op, v;
          v = this.model.attributes;
          if (v.name) {
            op = {
              uid: user.id,
              rname: v.name,
              gid: v.gid,
              mperson: v.mperson,
              rimg: user.data.avatar,
              rintro: v.rintro
            };
            action = user.room ? (op.rid = user.roomInfo.rid, 'RoomGameUpdate') : 'RoomCreate';
            se(action, op);
            return this.closeDlg();
          } else {
            return popMsg('请输入方面名称', 'warning');
          }
        }
      });
      cf._pickGame = 'create';
      return se('GameGetList', {
        max: '10',
        offest: '0',
        tid: '1'
      });
    });
    return ctn.append(btn);
  };

  cf.roomBtn = function() {
    if (user.room) {
      return cf.addMyRoom($('.mobView>.panel>.panel-heading'));
    } else {
      return cf.addRoomBtn($('.panel-heading'));
    }
  };

  so('GameGetList', function(d) {
    if (cf._pickGame === 'create') {
      return app.hotGames.reset(d.entities);
    } else {
      return app.dm.collection('air', 'game', {
        toFetch: false,
        title: '游 戏',
        count: d.count,
        data: d.entities,
        tagClass: 'modal-body clearfix',
        events: {
          'click .pick': function(e) {
            d = this.findData(e);
            se('RoomGameUpdate', {
              uid: user.id,
              gid: d.get('gid'),
              rid: user.roomInfo.rid
            });
            return this.closeDlg();
          }
        },
        modelOpt: {
          tagName: 'a',
          className: 'pick col-xs-3 text-center',
          tmpl: 'gameItem'
        }
      });
    }
  });

  new router({
    _exr: [require('../../../lib/func/mobLogin')],
    dfPath: 'index',
    checkSvrAuth: true,
    checkAuth: false,
    wtAutoLogin: true
  });

  if (app.hotGames == null) {
    app.hotGames = new cf.model.entities();
  }

  st.on('disconnect', function() {
    alert('您的网络连接已经断开');
    popMsg('您的网络连接已经断开，请重新进入', 'warning');
    return location.reload();
  });

  setInterval(function() {
    if (cf.inCenter()) {
      return se('RoomGetList', {
        offset: '0',
        max: '10'
      });
    }
  }, 5000);

  cf.inCenter = function() {
    return util.atHash(1) === 'room' && !util.atHash(2);
  };

}).call(this);

//# sourceMappingURL=mob.js.map
