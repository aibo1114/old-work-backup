// Generated by CoffeeScript 1.12.7
(function() {
  var isTagName;

  $.fn.ctrlCmd = function(key) {
    var allowDefault;
    allowDefault = true;
    if (!$.isArray(key)) {
      key = [key];
    }
    return this.keydown(function(e) {
      var i, l;
      i = 0;
      l = key.length;
      while (i < l) {
        if (e.keyCode === key[i].toUpperCase().charCodeAt(0) && e.metaKey) {
          allowDefault = false;
        }
        i++;
      }
      return allowDefault;
    });
  };

  $.fn.disableSelection = function() {
    this.ctrlCmd(['a', 'c']);
    return this.attr('unselectable', 'on').css({
      '-moz-user-select': '-moz-none',
      '-moz-user-select': 'none',
      '-o-user-select': 'none',
      '-khtml-user-select': 'none',
      '-webkit-user-select': 'none',
      '-ms-user-select': 'none',
      'user-select': 'none'
    }).bind('selectstart', false);
  };

  isTagName = function(e, whitelists) {
    var target;
    e = $.event.fix(e);
    target = e.target || e.srcElement;
    if (whitelists && $.inArray(target.tagName.toString().toUpperCase(), whitelists) === -1) {
      return false;
    }
    return true;
  };

  module.exports = function() {
    $(':not(input,select,textarea)').disableSelection().on('mousedown', function(e) {
      if (!isTagName(e, ['INPUT', 'TEXTAREA'])) {
        e.preventDefault();
        return false;
      }
      return true;
    });
    return $(document).bind('contextmenu', function(e) {
      if (!isTagName(e, ['INPUT', 'TEXTAREA'])) {
        e.preventDefault();
        return false;
      }
      return true;
    });
  };

}).call(this);

//# sourceMappingURL=noCopy.js.map
