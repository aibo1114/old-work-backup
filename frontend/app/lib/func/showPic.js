// Generated by CoffeeScript 1.12.7
(function() {
  var _mpm, _pm, changePic, dialog, img, imgReady, modal, mw;

  imgReady = require('../../res/js/imgReady');

  mw = 1200;

  modal = require('../tmpl/modal.jade');

  _pm = $('<div class="modal fade"></div>').append(modal({
    _content: '<img/>',
    head: true
  }));

  _pm.find('.modal-header').css({
    position: 'absolute',
    'z-index': 100,
    width: '100%',
    border: 0
  });

  _pm.find('.modal-body').css({
    padding: 0
  });

  _mpm = _pm.clone();

  dialog = _pm.find('.modal-dialog');

  img = _pm.find('img');

  dialog.append("<div data-index='0' class='pointer right carousel-control'><i class='glyphicon glyphicon-chevron-right'></i></div>");

  dialog.append("<div data-index='0' class='pointer left carousel-control'><i class='glyphicon glyphicon-chevron-left'></i></div>");

  changePic = function(index) {
    var url;
    url = util.resPath(cf.community, cf._popPicList[index]);
    dialog.data('index', index);
    return imgReady(url, function() {
      if (this.width > mw) {
        this.width = mw;
      }
      dialog.width(this.width);
      return img.fadeOut('fast', function() {
        return img.attr('src', url).fadeIn();
      });
    });
  };

  _pm.on('click', '.carousel-control .glyphicon', function(e) {
    var index, len, t;
    t = util.ct(e);
    index = dialog.data('index');
    len = cf._popPicList.length;
    if (t.hasClass('glyphicon-chevron-right')) {
      return changePic(++index % len);
    } else {
      if (index === 0) {
        index = len;
      }
      return changePic(--index);
    }
  });

  $('body').on('click', '.showModal', function(e) {
    var t, url;
    t = util.ct(e);
    url = t.attr('href');
    _mpm.find('.modal-body').addClass('embed-responsive embed-responsive-16by9').height(400);
    _mpm.find('img').replaceWith("<embed src='" + url + "' allowFullScreen='true' quality='high' width='100%' allowScriptAccess='always' type='application/x-shockwave-flash'></embed>");
    _mpm.modal('show');
    e.stopPropagation();
    return e.preventDefault();
  });

  module.exports = function(e) {
    var it, list, t, url;
    t = $(e);
    url = t.data('url') || t.attr('src');
    if (window.wx && cf.__wsr) {
      list = (function() {
        var i, len1, ref, results;
        ref = t.closest('.xFile').find('img');
        results = [];
        for (i = 0, len1 = ref.length; i < len1; i++) {
          it = ref[i];
          results.push($(it).attr('src'));
        }
        return results;
      })();
      return wx.previewImage({
        current: url,
        urls: list
      });
    } else {
      log('sho..');
      list = t.data('list');
      return imgReady(url, function() {
        var ref, ww;
        img.attr('src', url);
        img.css('width', '100%');
        ww = util.screenWith();
        if (this.width >= ww) {
          this.width = ww;
        } else if ((mw < (ref = this.width) && ref < ww)) {
          this.width = mw;
        }
        dialog.width(this.width);
        _pm.modal('show');
        if (list && (list = list.split(',')) && list.length > 1) {
          cf._popPicList = list;
          dialog.find('.carousel-control').show();
          return dialog.data('index', 0);
        } else {
          dialog.find('.carousel-control').hide();
          return cf._popPicList = null;
        }
      });
    }
  };

}).call(this);

//# sourceMappingURL=showPic.js.map
