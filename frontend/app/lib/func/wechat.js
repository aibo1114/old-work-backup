// Generated by CoffeeScript 1.12.7
(function() {
  var _opt, appId, jsInit, pubCode, rsp, showQr, url;

  url = '/a/wt/';

  showQr = function(res) {
    if (res.url) {
      return $('#qrBox').html("<img src='" + res.url + "'/>");
    } else {
      return $('.genQr').show();
    }
  };

  appId = $('body').data('wid');

  pubCode = $('body').data('wcode');

  cf.afterWxReady = function() {
    log('wx ready');
    cf.__wsr = true;
    if (!wt._ne) {
      alert(1);
      return cf.rr();
    }
  };

  cf.afterWxError = function() {
    warnMsg('微信注册异常');
    return cf.afterWxReady();
  };

  jsInit = function(res) {
    var that;
    res.debug = false;
    that = this;
    wx.config(res);
    wx.ready(function() {
      return cf.afterWxReady();
    });
    return wx.error(function() {
      that.rToken();
      that.getToken();
      return cf.afterWxError();
    });
  };

  _opt = {
    "default": {
      msg: '操作'
    },
    createMenu: {
      msg: '创建菜单',
      sCallback: function() {},
      eCallback: function() {}
    },
    createLimitQRCode: {
      msg: '创建二维码',
      sCallback: showQr
    },
    showQRCodeURL: {
      msg: '二维码',
      sCallback: showQr
    },
    jsSign: {
      sCallback: function(res) {
        return jsInit(res);
      }
    }
  };

  rsp = function(name) {
    var msg, op;
    op = _opt[name] || _opt["default"];
    msg = op.msg;
    return function(res) {
      if (res.errcode) {
        if (msg) {
          popMsg(msg + "失败", 'danger');
        }
        return typeof op.eCallback === "function" ? op.eCallback(res) : void 0;
      } else {
        if (msg) {
          popMsg(msg + "成功", 'success');
        }
        return typeof op.sCallback === "function" ? op.sCallback(res) : void 0;
      }
    };
  };

  module.exports = {
    _spWtStr: 'azbzc',
    callApi: function(name, data) {
      return $.postJSON(url + name, data, rsp(name));
    },
    renderQRImg: function(rs) {
      if (rs.entity && rs.entity.ticket) {
        return $('#qrBox').html("<img class='img-responsive' src='https://mp.weixin.qq.com/cgi-bin/showqrcode?ticket=" + rs.entity.ticket + "'/>");
      } else {
        return $('#qrBox').html('<p class="bg-danger">请先生成二维码</p>');
      }
    },
    tokenStr: function(act, ps, url) {
      var p;
      if (url == null) {
        url = this.url;
      }
      p = ['access_token=' + this.token];
      if (ps) {
        p = p.concat(ps);
      }
      return "" + this.url + act + "?" + (p.join('&'));
    },
    setWtJs: function(res, ne) {
      if (res == null) {
        res = 'onMenuShareTimeline,onMenuShareAppMessage,startRecord,stopRecord,onVoiceRecordEnd,playVoice,stopVoice,onVoicePlayEnd,uploadVoice,chooseImage,uploadImage,previewImage,openLocation,getLocation';
      }
      ne && (this._ne = ne);
      if (util.isWechat() && !cf.__wsr) {
        cf.loadJS('http://res.wx.qq.com/open/js/jweixin-1.0.0.js', (function(_this) {
          return function() {
            return _this.callApi('jsSign', {
              pubCode: pubCode,
              url: location.href.split('#')[0],
              res: res
            });
          };
        })(this));
        if (!ne) {
          throw 'waitWtJs';
        }
      }
    },
    rToken: function() {
      util.cleanLocal('we_expire');
      util.cleanLocal('we_token');
      util.cleanLocal('wejs_expire');
      util.cleanLocal('wejs_token');
      return log('token refreshed');
    },
    genWtUrl: function(page, func, state, scope) {
      var res;
      res = ["wCode=" + pubCode, "appId=" + appId];
      page && res.push("page=" + (encodeURIComponent(page)));
      func && res.push("func=" + (encodeURIComponent(func)));
      state && res.push("state=" + state);
      scope && res.push("scope=" + scope);
      return "http://" + cf.community.url + "/a/wt/login?" + (res.join('&'));
    },
    pPay: function(opt, md) {
      var pStr;
      pStr = md._e + "-" + md._id;
      util.saveLocal('_pay', $.extend({
        wCode: util.getCookie('wCode'),
        woid: util.getCookie('woid'),
        error: location.href,
        detail: pStr,
        body: pStr
      }, opt));
      return location.href = '/wtp';
    },
    pay: function(mo) {
      var id, opt;
      id = 'pif';
      $("iframe#" + id).remove();
      opt = {
        wCode: 'PETSNS',
        woid: user.get('woid'),
        body: 'pay',
        fee: mo.fee
      };
      url = "http://" + cf.community.url + (cf.mode ? ':3000' : '') + "/wtp";
      return util.getUrlParams(url, opt);
    },
    getToken: function() {
      var left, opt;
      left = util.readLocal('we_expire');
      if (left && (+left - new Date().getTime() / 1000) > 0) {
        this.token = util.readLocal('we_token');
        if (W.wx) {
          return this.getJsToken();
        }
      } else {
        opt = {
          url: this.url + 'token?grant_type=client_credential',
          code: this.code,
          appId: this.appId
        };
        return $.get(util.actUrl('wechat', 'getToken'), opt, (function(_this) {
          return function(res) {
            var now, ref;
            ref = res.split('___'), _this.token = ref[0], now = ref[1];
            util.saveLocal('we_token', _this.token);
            util.saveLocal('we_expire', +now + 7196);
            if (W.wx) {
              return _this.getJsToken();
            }
          };
        })(this));
      }
    },
    getAudio: function(mid, cb) {
      var opt;
      opt = {
        url: this.tokenStr('get', ["media_id=" + mid], 'http://file.api.weixin.qq.com/cgi-bin/media')
      };
      return this.request(opt, function(res) {
        return typeof cb === "function" ? cb(res) : void 0;
      });
    },
    getUserInfo: function() {
      var opt;
      opt = {
        url: this.tokenStr('user/info', ["openid=" + 'OPENID', "lang=zh_CN"]),
        type: 'get'
      };
      return this.request(opt, function(res) {
        return log(res);
      });
    },
    uploadRes: function(type, url, success) {
      return $.ajax({
        type: 'POST',
        url: this.tokenStr('media/upload', "type=" + type),
        data: fd,
        contentType: false,
        processData: false,
        success: success
      });
    },
    uploadNews: function(p, cb) {
      var opt;
      opt = {
        url: this.tokenStr('media/uploadnews'),
        resUrl: this.tokenStr('media/upload', "type=image", 'https://file.api.weixin.qq.com/cgi-bin/'),
        type: 'post'
      };
      if (p.preUrl) {
        p.preUrl = this.tokenStr('message/mass/preview');
        if (!p.username) {
          p.username = user.username;
        }
      }
      if (p.sendUrl) {
        p.sendUrl = this.tokenStr('message/mass/sendall');
      }
      return this.request($.extend(opt, p), (function(_this) {
        return function(res) {
          if (typeof cb === "function") {
            cb();
          }
          return popMsg('微信图文信息同步成功');
        };
      })(this), 'uploadNews');
    },
    showQRImg: function(key) {
      return $.get(util.restUrl('ticketTable') + '/' + key, this.renderQRImg);
    },
    request: function(opt, res, act) {
      if (act == null) {
        act = 'remote';
      }
      if (_.isObject(opt.opt)) {
        opt.opt = JSON.stringify(opt.opt);
      }
      return $.post(util.actUrl('wechat', act), opt, res);
    },
    recordShare: function(url, type) {
      return $.postJSON(util.actUrl("push/" + url), {
        uid: user.id,
        username: user.username || 'visitor',
        type: type
      }, (function(_this) {
        return function(res) {
          return popMsg('感谢您的分享');
        };
      })(this));
    },
    timelineShare: function(opt) {
      return wx.onMenuShareTimeline(opt);
    },
    msgShare: function(opt) {
      return wx.onMenuShareAppMessage(opt);
    },
    setShare: function(title, link, img, desc, rUrl) {
      var opt, so;
      opt = {
        title: title,
        link: link,
        imgUrl: img,
        success: function() {
          if (rUrl) {
            return wt.recordShare(rUrl, 'timeline');
          }
        }
      };
      so = $.extend({}, opt, {
        desc: desc,
        success: function() {
          if (rUrl) {
            return wt.recordShare(rUrl, 'msg');
          }
        }
      });
      wt.timelineShare(opt);
      return wt.msgShare(so);
    }
  };

}).call(this);

//# sourceMappingURL=wechat.js.map
