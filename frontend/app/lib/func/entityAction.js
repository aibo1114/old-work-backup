// Generated by CoffeeScript 1.12.7
(function() {
  require('../meta/comment');

  $.extend(cf, {
    _eAct: function(id, en, action, cb) {
      var opt, url;
      url = util.actUrl('set', en, '_id', id, action);
      opt = {
        _rsMsg: '关注成功',
        user: {
          _id: user.id,
          username: user.username
        }
      };
      return $.post(url, opt, function(res) {
        return typeof cb === "function" ? cb(res) : void 0;
      });
    },
    _thumb: function(eid, et, type) {
      var uid, username;
      username = user.username;
      uid = user.id;
      if ($("img[uid='" + uid + "']").length) {
        return popMsg('谢谢亲,您已经赞过了~:)');
      } else {
        this._viewCount(et, eid, 'up');
        return $.post(util.restUrl('thumb'), {
          entity: et,
          eid: eid,
          type: type,
          username: username,
          uid: uid
        }, function() {
          return popMsg('点赞成功~~,谢谢亲!');
        });
      }
    },
    _comment: function(id, entity, type, title, prop, p) {
      if (id == null) {
        id = location.pathname.split('/').pop();
      }
      if (type == null) {
        type = 'comment';
      }
      if (title == null) {
        title = '留言';
      }
      if (prop == null) {
        prop = 'comment';
      }
      if (p == null) {
        p = 'air';
      }
      return app.dm.form(p, 'comment', {
        teFetch: false,
        title: title,
        needLogin: true,
        btns: ['save'],
        urlRoot: util.actUrl('push', entity, '_id', id, type),
        data: function() {
          if (user.isLogin()) {
            return {
              uid: user.id,
              username: user.username,
              contact: user.get('phone' || user.get('email'))
            };
          } else {
            return {};
          }
        }
      });
    },
    _commentOne: function(eid, et, p) {
      var eta;
      if (!user.isLogin()) {
        cf.r('login');
        return;
      }
      eta = this;
      return app.dm.form(p, 'comment', {
        needLogin: true,
        toFetch: false,
        noLabel: true,
        btns: [],
        items: ['content'],
        data: function() {
          var d;
          d = {
            entity: et,
            eid: eid,
            uid: user.id,
            username: user.username
          };
          return d;
        },
        afterSave: function() {
          return eta._viewCount(et, eid, 'cCount');
        },
        teFetch: false
      });
    },
    _viewCount: function(et, id, prop) {
      return $.post(util.actUrl("inc/" + et + "/" + id + "/" + prop));
    }
  });

}).call(this);

//# sourceMappingURL=entityAction.js.map
