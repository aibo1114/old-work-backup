// Generated by CoffeeScript 1.12.7
(function() {
  Backbone.stSync = function(method, model, op) {

    /*
     * Create signature object that will emitted to server with every request. 
     * This is used on the server to push an event back to the client listener.
     */
    var ob, po;
    po = (function() {
      switch (method) {
        case 'create':
          return {
            body: model.toJSON()
          };
        case 'read':
          return {
            query: op.data,
            id: model.id
          };
        case 'patch':
          ob = op.attrs;
          return {
            q: {
              _id: model.id
            },
            body: ob
          };
        case 'update':
          return {
            q: {
              _id: model.id
            },
            body: model.toJSON()
          };
        case 'delete':
          return {
            id: model.id
          };
      }
    })();
    $.extend(po, {
      _method: method,
      ent: model.entity
    });
    st.send(po, function(d) {
      if (d.error) {
        op.error(d);
        return popMsg(d.msg, 'warning');
      } else {
        return op.success(d);
      }
    });
  };

  require('./BBSync');

}).call(this);

//# sourceMappingURL=BBSocket.js.map
