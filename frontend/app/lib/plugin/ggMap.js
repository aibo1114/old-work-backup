// Generated by CoffeeScript 1.12.7
(function() {
  var buildMarker;

  buildMarker = function(latlng, map, str) {
    var infowindow, mk;
    mk = new google.maps.Marker({
      position: latlng,
      map: map
    });
    if (str) {
      infowindow = new google.maps.InfoWindow();
      infowindow.setContent(str);
      google.maps.event.addListener(mk, "click", function() {
        return infowindow.open(map, mk);
      });
    }
    return mk;
  };

  cf._ggmap = function() {
    var d, i, len, map, mo, ref;
    cf._ggmr = true;
    mo = cf._ggmo;
    mo.center = new google.maps.LatLng(parseFloat(mo.lat), parseFloat(mo.lng));
    mo.minZoom = mo.zoom - 2;
    mo.maxZoom = mo.zoom + 5;
    if (this.infoContent) {
      mo.infoContent = this.infoContent;
    }
    map = new google.maps.Map($('#map-show')[0], mo);
    if (this.marks) {
      ref = this.marks;
      for (i = 0, len = ref.length; i < len; i++) {
        d = ref[i];
        if (d.lat) {
          this.addMarker(d.lat, d.lng, map, d.text, null, null, true);
        }
      }
    }
    if (mo.selected) {
      this.marker = buildMarker(new google.maps.LatLng(parseFloat(mo.lat), parseFloat(mo.lng)), map);
      return google.maps.event.addListener(map, "click", (function(_this) {
        return function(e) {
          var fm, pt;
          _this.marker.setPosition(e.latLng);
          pt = {
            lat: e.latLng.lat(),
            lng: e.latLng.lng()
          };
          fm = mo.form;
          if (mo.afterSelect) {
            return mo.afterSelect(fm, pt);
          } else {
            fm.model.set('geo', pt);
            return fm.$('[name="geo"]').val(_.values(pt));
          }
        };
      })(this));
    }
  };

  module.exports = _exv('ggMap', 'tag', {
    auto: true,
    closeBtn: true,
    head: true,
    id: 'map-box',
    mo: {
      lng: 116.46,
      lat: 39.92,
      zoom: 12
    },
    className: 'showMap',
    afterDlgClose: function() {
      return cf._bdmo = null;
    },
    enhanceContent: function() {
      this.ctn = this.$('.modal-body');
      this.ctn.attr('id', 'map-show');
      return this.ctn.height(this.height || 450);
    },
    callback: function() {
      this.mo.form = this.form;
      $.extend(this.mo, this.opt);
      cf._ggmo = this.mo;
      if (cf._ggmr) {
        return cf._ggmap();
      } else {
        return cf.loadJS('http://maps.google.com/maps/api/js?sensor=true&callback=cf._ggmap');
      }
    }
  });

}).call(this);

//# sourceMappingURL=ggMap.js.map
