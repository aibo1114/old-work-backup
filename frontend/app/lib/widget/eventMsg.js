// Generated by CoffeeScript 1.12.7
(function() {
  var entities, tag;

  tag = require('../view/tag');

  entities = require('../model/entities');

  module.exports = tag.extend({
    className: 'alertBox alert alert-info',
    parent: 'body',
    gap: 5000,
    events: {
      mouseenter: function() {
        if (this.loopTimer) {
          clearTimeout(this.loopTimer);
        }
        return this.$('.eList').removeAttr('style');
      },
      mouseleave: 'leave',
      'click .closeBox': function(e) {
        return $('.alertBox ').hide();
      }
    },
    leave: function() {
      this.$('.eList').css('max-height', '150px');
      return this.loopTimer = setInterval((function(_this) {
        return function() {
          return _this.eList.fetch({
            data: _this.eList.criteriaOpt()
          });
        };
      })(this), this.gap);
    },
    callback: function() {
      return this.ctn.prepend("<h4>新消息" + (util.icon('minus-sign closeBox')) + "<strong class='badge'></strong></h4><div class='eList'></div>");
    },
    criteriaOpt: function() {
      return {
        q: {
          status: 0
        }
      };
    },
    init: function() {
      this.render();
      this.eList = new entities([], {
        pView: this,
        entity: 'event',
        toFetch: false,
        init: function() {
          return this.listenTo(this, 'all', function() {
            return this.pView.$el.find('.badge').text(this.size());
          });
        },
        criteriaOpt: this.criteriaOpt,
        afterAjax: function() {
          if (this.size() > 0) {
            return this.pView.$el.fadeIn();
          } else {
            return this.pView.$el.fadeOut();
          }
        }
      });
      this.eView = new cf.view.collection({
        className: 'list-group',
        collection: this.eList,
        parent: '.eList',
        pView: this,
        toFetch: false,
        events: {
          'click a': function(e) {
            var item;
            item = this.collection.get(util.getTargetId(e));
            item.set('status', 1);
            item.save();
            util.ct(e).remove();
            this.collection.remove(item);
            if (this.collection.length === 0) {
              return this.pView.hide();
            }
          }
        },
        addOne: function(d) {
          d = d.attributes;
          tag = $("<a id='ev-" + d.id + "' class='list-group-item'></a>");
          tag.html(d.msg + " " + (util.icon('ok', 'pull-right brand-success')));
          if (d.act.startsWith('!/')) {
            tag.attr('href', '#' + d.act);
          } else if (d.act.startsWith('http://')) {
            tag.attr('href', d.act);
          }
          return this.ctn.append(tag);
        }
      });
      return this.leave();
    }
  });

}).call(this);

//# sourceMappingURL=eventMsg.js.map
