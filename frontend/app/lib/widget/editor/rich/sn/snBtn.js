// Generated by CoffeeScript 1.12.7
(function() {
  var figure;

  figure = function(path) {
    return $(cf.rtp(require('../figure.jade'), {
      path: path,
      title: prompt('请输入图片下方介绍信息')
    }))[0];
  };

  $.extend(true, cf._snPlugin, {
    pic: function(ctx) {
      var ui;
      ui = $.summernote.ui;
      ctx.memo('button.text', function() {
        var btn;
        btn = ui.button({
          contents: util.icon('ice-lolly-tasted'),
          tooltip: '格式过滤',
          click: function() {
            return app.dm.add('air', 'common', {
              title: '格式过滤',
              noLabel: true,
              prop: [m._textarea('memo')],
              _save: function() {
                var i, it, len, ref, str;
                str = this.$('[name="memo"]').val().trim();
                ref = _.compact(str.split('\n'));
                for (i = 0, len = ref.length; i < len; i++) {
                  it = ref[i];
                  if (it.trim()) {
                    ctx.invoke('editor.insertNode', $("<p>" + it + "</p>")[0]);
                  }
                }
                return this.closeDlg();
              }
            });
          }
        });
        return btn.render();
      });
      ctx.memo('button.pic', function() {
        var btn;
        btn = ui.button({
          contents: util.icon('picture'),
          tooltip: '插入图片',
          click: function() {
            var up;
            if (cf.mob) {
              if (W.wx) {
                return wx.chooseImage({
                  count: 1,
                  sizeType: 'compressed',
                  success: function(res) {
                    var it;
                    it = res.localIds[0];
                    return wx.uploadImage({
                      localId: it,
                      isShowProgressTips: 1,
                      success: function(us) {
                        var img;
                        img = it;
                        return $.post(util.actUrl('upload', {
                          _wt: true,
                          mid: us.serverId,
                          wcode: $('body').data('wcode'),
                          type: 'img',
                          uid: user.id
                        }, function(res) {
                          return ctx.invoke('editor.insertNode', tu.resPath(cf.community, res.path));
                        }));
                      }
                    });
                  }
                });
              } else {
                up = $('.uupp');
                if (!up.length) {
                  up = $("<input class='uupp' type='file'/>").hide();
                  up.change(function(e) {
                    var fd, file;
                    file = util.ct(e)[0].files[0];
                    if (file.size > cf.uSize.img.max) {
                      return popMsg('文件太大', 'warning');
                    } else {
                      fd = new FormData();
                      fd.append(util.randomChar(8), file);
                      return $.ajax({
                        type: 'POST',
                        url: util.getUrlParams(util.actUrl("upload"), {
                          code: cf.code,
                          uid: user.id
                        }),
                        data: fd,
                        contentType: false,
                        processData: false,
                        success: function(res) {
                          return ctx.invoke('editor.insertNode', figure(tu.resPath(cf.community, res.entity.path.split(cf.code + "/")[1])));
                        }
                      });
                    }
                  });
                  $('form').append(up);
                }
                return up.trigger('click');
              }
            } else {
              return cf.dm.l('fileCollection', 'air', {
                type: 'img',
                multi: true,
                title: '插入图片',
                toFetch: true,
                closeBtn: true,
                itemBtns: ['insertToPage'],
                url: '/r/c/mg/file/list',
                foot: true,
                preRender: function() {},
                events: {
                  'click .insertToPage': function(e) {
                    ctx.invoke('editor.insertNode', figure(util.ct(e).parent().prev().attr('src').split('?')[0]));
                    return this.closeDlg();
                  }
                }
              });
            }
          }
        });
        return btn.render();
      });
      ctx.memo('button.item', function() {
        var btn;
        btn = ui.button({
          contents: util.icon('th-large'),
          tooltip: '插入站内内容',
          click: function() {
            return app.dm.form('air', 'head', {
              title: '站内页面',
              cols: 'col-md-4:col-md-8',
              items: ['refClass', 'ref'],
              btns: ['save'],
              save: function() {
                var link;
                link = this.$el.data('_link');
                if (link) {
                  ctx.invoke('editor.insertNode', $(link)[0]);
                }
                this.$el.removeData('_link');
                return this.$el.modal("hide");
              }
            });
          }
        });
        return btn.render();
      });
      ctx.memo('button.tmpl', function() {
        var btn;
        btn = ui.button({
          contents: util.icon('file'),
          tooltip: '设置页面模板',
          click: function() {
            var cstr, p, url;
            if (!confirm(iim('sure'))) {
              return;
            }
            cstr = cf.code;
            if (cf.community.pCode) {
              cstr = cf.community.pCode + '___' + cstr;
            }
            p = [util.atHash(3) + '.html', cstr, 'tmpl___editor'].join(':');
            url = util.restUrl('file/' + p);
            return $.get(url, null, function(res) {
              var t, ta;
              if (res.entity) {
                t = $('.note-editor');
                ta = t.prev();
                ta.summernote('code', res.entity.content);
                return ta.trigger('change');
              } else {
                return alert('没有模板文件');
              }
            });
          }
        });
        return btn.render();
      });
      return ctx.memo('button.custContent', function() {
        var btn;
        btn = ui.button({
          contents: util.icon('th'),
          tooltip: '插入页面模块',
          click: function() {
            return app.dm.tb('air', 'content', {
              cols: [_ep('title'), _ep('content:content')],
              btns: [],
              criteriaOpt: function() {
                return {
                  q: {
                    cat: 'func'
                  }
                };
              },
              title: '页面模块',
              events: {
                'click tr': function(e) {
                  ctx.invoke('editor.insertNode', $("<div>" + (this.findData(e).get('content')) + "</div>")[0]);
                  return this.closeDlg();
                }
              }
            });
          }
        });
        return btn.render();
      });
    }
  });

}).call(this);

//# sourceMappingURL=snBtn.js.map
