// Generated by CoffeeScript 1.12.7
(function() {
  var selectBox;

  require('./multiSelect.less');

  selectBox = require('./app');

  meta.common.duration = {
    type: 'text'
  };

  module.exports = cf.view.multiSelect = selectBox.extend({
    width: '200px',
    height: '90px',
    itemBtn: ['edit'],
    clickShow: false,
    msTmpl: require('./multiSelect.jade'),
    showImg: 'slide',
    groupBtn: null,
    events: {
      'click a[data-cid]': 'pick',
      'click .del': function(e) {
        var idx, item, t;
        t = util.ct(e);
        item = t.closest('.msItem');
        idx = item.index();
        item.remove();
        this.val.splice(idx, 1);
        return this.form.model.set(this.name, this.val);
      },
      'click .pos': function(e) {},
      'click .add': function(e) {
        var p, that;
        if (this.$('.subAddBrand').length) {
          return;
        }
        that = this;
        p = $('.modal').length ? this.ctn : 'air';
        return app.dm.form(p, this.formEntity || this.entity, {
          toFetch: false,
          className: 'form-horizontal subAddBrand',
          style: '',
          cleanAll: false,
          _save: function() {
            var opt;
            opt = this.model.toJSON();
            that.val.push(opt);
            if (this.$el.hasClass('modal')) {
              this.closeDlg();
            } else {
              this.$el.remove();
            }
            that.form.model.set(that.name, that.val);
            return that.resCtn.append(that.resItem(opt));
          }
        });
      },
      'click .edit': function(e) {
        var fmObj, idx, name, v;
        v = this.val;
        fmObj = this.form;
        name = this.name;
        idx = util.ct(e).closest('.msItem').index();
        return app.dm.form('air', this.panelOpt.entity, {
          toFetch: false,
          items: this.getAttrs().split(','),
          data: v[idx],
          _save: function() {
            v[idx] = this.model.toJSON();
            fmObj.model.set(name, v);
            return this.closeDlg();
          }
        });
      },
      'mouseenter .msItem': function(e) {
        return this.$('.btnCtn').show();
      },
      'mouseleave .msItem': function(e) {
        return this.$('.btnCtn').hide();
      }
    },
    preRender: function() {
      var i, it, len, ref, results;
      if (this.data) {
        this.val = this.data;
      }
      this.resCtn = $('<div class="multiSelect"></div>');
      if (this.target.attr('parent')) {
        this.target.closest(this.target.attr('parent')).after(this.resCtn);
      } else {
        this.target.after(this.resCtn);
      }
      if (_.isArray(this.val)) {
        ref = this.val;
        results = [];
        for (i = 0, len = ref.length; i < len; i++) {
          it = ref[i];
          results.push(this.resCtn.append(this.resItem(it)));
        }
        return results;
      } else {
        return this.val = [];
      }
    },
    pick: function(e) {
      this.data = this.collection.findData(e).attributes;
      if (this.single) {
        this.resCtn.html(this.resItem(this.data));
        this.val = [];
      } else {
        if (!this.val.findBy('_id', this.data._id)) {
          this.resCtn.append(this.resItem(this.data));
        }
      }
      this.setVal();
      if (typeof this.afterPick === "function") {
        this.afterPick(this.data);
      }
      this.target.val('');
      return this.panel.hide();
    },
    setVal: function() {
      var res;
      res = _.pick(this.data, this.getAttrs().split(','));
      if (res._id == null) {
        res._id = this.data._id;
      }
      this.val.pushById(res, '_id');
      return this.form.model.set(this.name, this.val);
    },
    imgPath: function(d) {
      var path;
      path = this.showImg === 'portrait' ? "portrait/" + d._id + ".jpg" : this.showImg === 'id' ? d._id + ".jpg" : d.refFile && d.refFile[this.showImg] ? d.refFile[this.showImg][0] : 'default.jpg';
      return util.resPath(cf.community, path);
    },
    resItem: function(d) {
      var opt;
      opt = {
        width: this.width,
        height: this.height,
        img: this.imgPath(d)
      };
      return cf.rtp(this.msTmpl, $.extend(opt, d));
    }
  });

}).call(this);

//# sourceMappingURL=multiSelect.js.map
