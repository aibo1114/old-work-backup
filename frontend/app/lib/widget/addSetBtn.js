// Generated by CoffeeScript 1.12.7
(function() {
  module.exports = _exv('addSetBtn', '_tag', {
    added: false,
    init: function() {
      var cls;
      cls = this.className();
      return this.$el.attr('class', cls);
    },
    className: function() {
      return "btn circle btn-" + this.color;
    },
    events: function() {
      return {
        'click': function() {
          var act;
          if (this._clickBtn) {
            return this._clickBtn();
          } else {
            if (user.isLogin() || user.fake) {
              act = this.added ? (cf._rsMsg = "取消" + (ii(this.prop)) + "成功", 'pull') : (cf._rsMsg = "添加" + (ii(this.prop)) + "成功", 'addToSet');
              $.post(util.actUrl(act + "/" + this.ent._e + "/_id/" + this.ent._id + "/" + this.prop), {
                _str: this.item
              }, (function(_this) {
                return function(res) {
                  return _this.setState(res.entity);
                };
              })(this));
              return typeof this.clickBtn === "function" ? this.clickBtn() : void 0;
            } else {
              if (util.isWechat()) {
                return location.href = wt.genWtUrl(location.pathname.substr(1) + location.search);
              }
            }
          }
        }
      };
    },
    setContent: function() {
      this.ctn.append(tu.icon(this.icon));
      this.show = this.ctn.mk('div');
      return this.setState();
    },
    setState: function(d) {
      if (this.ent) {
        if (d) {
          this.ent[this.prop] = d[this.prop];
        }
        this.items = this.ent[this.prop] || [];
        this.added = this.items.has(this.item);
      }
      return this.render();
    },
    render: function() {
      var act;
      act = this.added ? 'addClass' : 'removeClass';
      this.$el[act]('active');
      return this.show.html(typeof this.text === "function" ? this.text() : void 0);
    }
  });

}).call(this);

//# sourceMappingURL=addSetBtn.js.map
