// Generated by CoffeeScript 1.12.7
(function() {
  module.exports = cf.view.tag.extend({
    className: 'sbtn',
    btnClass: 'btn btn-primary btn-block',
    login: true,
    code: cf.code,
    auto: true,
    events: {
      "click a,button": "fire"
    },
    init: function() {
      return this.ctn = this.$el;
    },
    noLogin: function() {
      popMsg(ii('m.login_first'), 'warning');
      $('#login>a').trigger('click');
      return $('#loginForm input:first').focus().select();
    },
    checkFire: function() {
      if (user.isLogin()) {
        return true;
      } else {
        this.noLogin();
        cf.r('login');
        return false;
      }
    },
    fire: function() {
      if (this.confirm && !confirm(this.confirm)) {
        return;
      }
      if (!this.checkFire()) {
        return;
      }
      this.waiting();
      return $.ajax({
        type: (this.type ? this.type : "post"),
        url: _.result(this, 'url'),
        data: this.params ? this.params() : {},
        async: (this.callback ? true : false),
        dataType: "json",
        success: (function(_this) {
          return function(result) {
            var ref;
            if ((ref = _this.afterSuccess) != null) {
              ref.call(_this, result);
            }
            return _this.enable.call(_this);
          };
        })(this),
        error: (function(_this) {
          return function() {
            var ref;
            if ((ref = _this.errorCallback) != null) {
              ref.call(_this, arguments);
            }
            return _this.enable.call(_this);
          };
        })(this)
      });
    },
    waiting: function() {
      this.disable();
      return this.btn.text("Waiting...");
    },
    disable: function() {
      return this.btn.attr("disabled", true);
    },
    enable: function() {
      return this.btn.removeClass("disabled").removeAttr("disabled").text(ii(this.text));
    },
    preRender: function() {
      if (typeof this.doBiz === "function") {
        this.doBiz();
      }
      if (this.text) {
        this.btn = $("<a/>").addClass(this.btnClass);
        this.text && this.btn.text(_.result(this, 'text'));
        this.icon && this.btn.prepend(this.icon);
        this.disabled && this.disable();
        this.help && this.btn.attr('title', this.help);
        this.href && this.btn.attr('href', this.href);
      } else {
        this.btn = this.text;
      }
      return this.ctn.append(this.btn);
    }
  });

}).call(this);

//# sourceMappingURL=btn.js.map
