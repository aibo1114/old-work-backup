// Generated by CoffeeScript 1.12.7
(function() {
  module.exports = {
    required: function(v, p) {
      return p && (_.isUndefined(v) || v === null || v.length === 0);
    },
    min: function(v, p) {
      return +v < +p;
    },
    max: function(v, p) {
      return +v >= +p;
    },
    minlength: function(v, p) {
      return v && v.length < parseInt(p);
    },
    maxlength: function(v, p) {
      return v && v.length > parseInt(p);
    },
    number: function(v) {
      return v && !/^-?(?:\d+|\d{1,3}(?:,\d{3})+)(?:\.\d+)?$/.test(v);
    },
    date: function(v, p) {},
    dateTime: function(v, p) {},
    homePhone: function(v, p) {
      return !/^0\d{2,3}-?\d{7,8}$/.test(v);
    },
    telephone: function(v, p) {
      return !/^1\d{10}$/.test(v);
    },
    time: function(v, p) {},
    digits: function(v, p) {},
    alphabet: function(v, p) {
      return !/^[A-Za-z]+$/.test(v);
    },
    char: function(v, p) {
      return !/^[A-Za-z0-9_-]+$/.test(v);
    },
    equalTo: function(v, p) {
      return v !== $(p).val();
    },
    inEqualTo: function(v, p) {
      return v === $(p).val();
    },
    email: function(v, p) {
      return !/^(\w-*\.*)+@(\w-?)+(\.\w{2,})+$/i.test(v);
    },
    pattern: function(v, p) {
      return !p.test(v);
    },
    url: function(v, p) {
      return v && !/[a-zA-z]+:\/\/[^\s]*$/i.test(v);
    },
    range: function(v, p) {},
    laterThan: function(v, p) {
      return util.parseLocalDate(v) < util.parseLocalDate($(p).children('input').val());
    },
    earlyThan: function(v, p) {
      return util.parseLocalDate(v) > util.parseLocalDate($(p).children('input').text());
    }
  };

}).call(this);

//# sourceMappingURL=validator.js.map
