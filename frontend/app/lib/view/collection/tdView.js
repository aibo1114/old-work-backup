// Generated by CoffeeScript 1.12.7
(function() {
  module.exports = function(data, item, entity, meta, model) {
    var text, v;
    text = (v = util.seqProp(data, item.code)) !== null ? v : item.val ? _.isFunction(item.val) ? item.val(data) : item.val : '';
    if (text && text.length > 30) {
      text = util.adjustText(text);
    }
    switch (item.type) {
      case "ckb":
        return "<input class='ckb' type=\"checkbox\" id=\"ckb-" + data.id + "\">";
      case "email":
        return "<a href=\"mailto:" + data[item.type] + "\">" + text + "</a>";
      case "edit":
        item.code = 'data/' + item.type;
        return "<a href=\"" + (util.navUrl(item.code, entity, data.id)) + "\">" + text + "</a>";
      case "link":
        return "<a href=\"" + item.href + "\" class=\"" + item.cls + "\">" + text + "</a>";
      case 'money':
        if (text) {
          return (+text || 0).formatMoney(2);
        }
        break;
      case 'map':
        if (meta[item.code] && meta[item.code].data) {
          return _.result(meta[item.code], 'data')[text];
        } else {
          return '';
        }
        break;
      case "date":
        if (text) {
          return Date.parseLocal(text).pattern(item.ptn || 'yyyy-MM-dd HH:mm');
        } else {
          return '';
        }
        break;
      case "show":
      case "modify":
        return cf._link(null, text, null, 'show', this.entity + '-' + data.id);
      case 'btn':
        return tu.genBtn(item.attrs);
      case 'blank':
        return '';
      default:
        if (item && item.showText) {
          return item.showText(text, data, meta, model);
        } else if (item.converter) {
          return item.converter(text, data);
        } else {
          if (item.size) {
            return util.adjustText(text, item.size);
          } else {
            return text;
          }
        }
    }
  };

}).call(this);

//# sourceMappingURL=tdView.js.map
