// Generated by CoffeeScript 1.12.7
(function() {
  module.exports = _exv('tabForm', 'sForm', {
    num: 0,
    saveByStep: true,
    onTab: function(e) {
      var t;
      t = util.ct(e);
      this.num = t.parent().index();
      util.setActive(t.parent());
      return typeof this.renderOneTab === "function" ? this.renderOneTab() : void 0;
    },
    renderOneTab: function() {
      var curItems, opt, ref;
      if (this.formTab == null) {
        this.formTab = this.$('.formTab');
      }
      if (this.tabCtn == null) {
        this.tabCtn = this.$('.tabCtn');
      }
      curItems = this.items[this.num];
      opt = typeof curItems.context === "function" ? curItems.context() : void 0;
      this.tabCtn.html(cf.rtp(curItems.tmpl, opt));
      this.formTab.find("li:eq(" + this.num + ")").addClass('active').siblings().removeClass('active');
      return (ref = curItems.callback) != null ? ref.call(this) : void 0;
    },
    isFinalTab: function() {
      return (+this.num + 1) === this.items.length;
    },
    renderNextTab: function() {
      if (this.num < this.items.length) {
        this.num++;
        return this.renderOneTab();
      }
    },
    prev: function() {
      if (this.num > 0) {
        this.num--;
        return this.renderOneTab();
      }
    },
    preRender: function() {
      this.renderOneTab();
      if (this.focus) {
        this.$(this.focus).focus();
      }
      return this;
    },
    next: function() {
      var ffm;
      this.ctn.find('.alert-danger').remove();
      if (!this.validModel()) {
        return;
      }
      cf.blockLine = this.$('a.btn-primary');
      if (this.saveByStep || this.isFinalTab()) {
        ffm = this._save;
      } else {
        ffm = this.renderNextTab;
      }
      if (this.items[this.num].nextTab) {
        return this.items[this.num].nextTab.call(this, ffm);
      } else {
        return ffm.call(this);
      }
    }
  });

}).call(this);

//# sourceMappingURL=tabForm.js.map
